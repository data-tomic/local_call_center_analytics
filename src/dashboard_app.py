import streamlit as st
import pandas as pd
import plotly.express as px
from pathlib import Path

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
BASE_DIR = Path(__file__).resolve().parent.parent # –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤ src/
DATA_FILE = BASE_DIR / "data" / "processed" / "processed_call_data.parquet"
# ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞ ...
# DATA_FILE = Path("./processed_call_data.csv")

# --- –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º ---
@st.cache_data # –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –Ω–µ —á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
def load_data():
    if not DATA_FILE.exists():
        st.error(f"–§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {DATA_FILE}")
        st.info("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, process_data.py) –¥–ª—è –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è.")
        return pd.DataFrame() # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π DataFrame

    try:
        if DATA_FILE.suffix == '.parquet':
            df = pd.read_parquet(DATA_FILE)
        elif DATA_FILE.suffix == '.csv':
            df = pd.read_csv(DATA_FILE)
        else:
            st.error(f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞: {DATA_FILE.suffix}")
            return pd.DataFrame()

        # --- –ë–∞–∑–æ–≤–∞—è –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞) ---
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞—Ç (–µ—Å–ª–∏ –ú–µ—Å—è—Ü_–ì–æ–¥ –∏ –í—Ä–µ–º—è –º–æ–∂–Ω–æ —Å–ø–∞—Ä—Å–∏—Ç—å)
        # df['–î–∞—Ç–∞–í—Ä–µ–º—è'] = ... # –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å datetime –∫–æ–ª–æ–Ω–∫—É
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ int, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ (–ø–æ—Å–ª–µ melt –æ–Ω–æ float)
        df['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'] = df['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'].fillna(0).astype(int)
        return df
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ {DATA_FILE}: {e}")
        return pd.DataFrame()

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ---
df = load_data()

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit ---
st.set_page_config(layout="wide", page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ö–æ–ª–ª-–¶–µ–Ω—Ç—Ä–∞")
st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ö–æ–ª–ª-–¶–µ–Ω—Ç—Ä–∞ (–õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)")

if df.empty:
    st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
    st.stop() # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–∞—à–±–æ—Ä–¥–∞

# --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ ---
st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã")

# –§–∏–ª—å—Ç—Ä –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
all_employees = ['–í—Å–µ'] + sorted(df['–ò–º—è_–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'].astype(str).unique())
selected_employee = st.sidebar.selectbox("–°–æ—Ç—Ä—É–¥–Ω–∏–∫:", all_employees)

# –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –∫–æ–Ω—Ç–∞–∫—Ç–∞
all_types = ['–í—Å–µ'] + sorted(df['–¢–∏–ø_–ö–æ–Ω—Ç–∞–∫—Ç–∞'].unique())
selected_type = st.sidebar.selectbox("–¢–∏–ø –ö–æ–Ω—Ç–∞–∫—Ç–∞:", all_types)

# TODO: –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ, –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–ª–æ–Ω–∫–∞ –î–∞—Ç–∞–í—Ä–µ–º—è
# selected_date_range = st.sidebar.date_input("–ü–µ—Ä–∏–æ–¥:", [min_date, max_date])

# --- –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ ---
df_filtered = df.copy()
if selected_employee != '–í—Å–µ':
    df_filtered = df_filtered[df_filtered['–ò–º—è_–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'] == selected_employee]
if selected_type != '–í—Å–µ':
    df_filtered = df_filtered[df_filtered['–¢–∏–ø_–ö–æ–Ω—Ç–∞–∫—Ç–∞'] == selected_type]
# TODO: –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ

if df_filtered.empty:
    st.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")
    st.stop()

# --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ê–Ω–∞–ª–∏—Ç–∏–∫–∏ ---
st.header("–°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")

# –ú–µ—Ç—Ä–∏–∫–∏ KPI
total_calls = df_filtered['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'].sum()
# –°—á–∏—Ç–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –¥–æ melt –∏–ª–∏ –ø–æ ID)
# unique_interactions = df_filtered[['–ò–º—è_–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', '–ú–µ—Å—è—Ü_–ì–æ–¥', '–í—Ä–µ–º—è', '–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å']].drop_duplicates().shape[0]

col1, col2, col3 = st.columns(3)
col1.metric("–í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π (—Å—Ç—Ä–æ–∫)", f"{total_calls:,}")
# col2.metric("–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π", f"{unique_interactions:,}") # –ü—Ä–∏–º–µ—Ä

# –ì—Ä–∞—Ñ–∏–∫–∏
st.header("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏")

# 1. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø—É –∫–æ–Ω—Ç–∞–∫—Ç–∞
calls_by_type = df_filtered.groupby('–¢–∏–ø_–ö–æ–Ω—Ç–∞–∫—Ç–∞')['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'].sum().reset_index()
fig_type = px.bar(calls_by_type, x='–¢–∏–ø_–ö–æ–Ω—Ç–∞–∫—Ç–∞', y='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø—É –∫–æ–Ω—Ç–∞–∫—Ç–∞", text_auto=True)
st.plotly_chart(fig_type, use_container_width=True)

# 2. –¢–æ–ø —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–æ–±—ã—Ç–∏–π
calls_by_employee = df_filtered.groupby('–ò–º—è_–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞')['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'].sum().reset_index().sort_values(by='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', ascending=False)
fig_employee = px.bar(calls_by_employee.head(10), x='–ò–º—è_–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞', y='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', title="–¢–æ–ø —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ –∫–æ–ª-–≤—É —Å–æ–±—ã—Ç–∏–π", text_auto=True)
st.plotly_chart(fig_employee, use_container_width=True)

# TODO: –î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –≥—Ä–∞—Ñ–∏–∫–∏:
# - –î–∏–Ω–∞–º–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –î–∞—Ç–∞–í—Ä–µ–º—è)
# - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —á–∞—Å–∞–º/–¥–Ω—è–º –Ω–µ–¥–µ–ª–∏

# –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
st.header("–î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
st.dataframe(df_filtered, use_container_width=True)

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫—ç—à)
if st.sidebar.button("–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"):
    st.cache_data.clear()
    st.rerun()
